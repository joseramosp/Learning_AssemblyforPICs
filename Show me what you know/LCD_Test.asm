; Jose Ramos |  Student ID: 00299444
; Lab: LCD Message
; April 15 of 2019
; Show me what you know
	
;#include <p18f452.inc>

	COUNTER1  EQU 0X00		; Label for a outter counter used in the subroutine DELAY.
	COUNTER2  EQU 0X01		; Label for a inner counter used in the subroutine DELAY.
	LOOP_COUNTER EQU 0X02		; Label for a counter that is going to be used when printing message on the screen.
	
	;Creating a label for every caracter ASCII code that is going to be used.
	LET_A  	  EQU D'65'		 
	LET_D	  EQU D'68'		
	LET_E	  EQU D'69'
	LET_F	  EQU D'70'		
	LET_I	  EQU D'73'
	LET_J	  EQU D'74'
	LET_M	  EQU D'77'
	LET_N	  EQU D'78'
	LET_G	  EQU D'71'
	LET_O	  EQU D'79'
	LET_P	  EQU D'80'
	LET_L	  EQU D'76'
	LET_R	  EQU D'82'
	LET_S	  EQU D'83'
	LET_V	  EQU D'86'
	LET_W	  EQU D'87'
	LET_.	  EQU D'46'
	LET_COLON EQU D'58'
	LET_<	  EQU D'60'
	LET_3	  EQU D'51'
	LET_SPACE EQU D'20'
	LET_@	  EQU D'64'
	LET_HEART EQU D'173'

	;Labels for the pins used in PORTA to control the LCD.
	LCD_E	  EQU 2	;Label to Enable the input to read data
	LCD_RS	  EQU 3	;Label for the register select pin of the LCD

	ORG	0x00
	GOTO	START	; JUMP TO THE LABEL START
				
	ORG	0X20	;0X20 TO BEGIN PROGRAM

START:		
	CLRF 	TRISA		; CLEAR TRISA
	CLRF	TRISB		; CLEAR TRISB
	LFSR	FSR0,PORTB	; SETUP FSR0 AS A POINTER TO DATA REGISTERS BEGINNING WITH PORTB
	MOVLW	UPPER SOURCE	; SETUP TBLPTER POINTING TO SOURCE ADDRESS UPPER BITS
	MOVWF	TBLPTRU		; COPY ADDRESS INTO TABLE POINTER UPPER(NO VALUE BECAUSE IT IS A LOWER ORDER BIT @50)
	MOVLW	HIGH SOURCE	; 
	MOVWF	TBLPTRH		; 
	MOVLW	LOW SOURCE	; 
	MOVWF	TBLPTRL		; 
	CLRF	PORTA		; CLEAR PORTA
	CLRF	PORTB		; CLEAR PORTB
	BSF	PORTA,LCD_RS	; SETTING THE BIT 3 OF PORTA
	CALL	DELAY		; CALLING THE SUBROUTINE DELAY
	
	CALL	PRINT_MESSAGE	; CALLING THE SUBROUTINE PRINT_MESSAGE  
	CALL	CLEAR_LCD	; CALLING THE SUBROUTINE CLEAR_LCD
	CALL	PRINT_MESSAGE	; CALLING THE SUBROUTINE PRINT_MESSAGE
	CALL	NEXT_ROW	; CALLING THE SUBROUTINE NEXT_ROW
	CALL	PRINT_MESSAGE	; CALLING THE SUBROUTINE PRINT_MESSAGE

	GOTO	ENDING		; JUMPING TO THE ENDING LABEL

;CREATING A SUBROUTINE THAT WILL PRINT A ROW IN THE LCD USING THE NEXT 16 VALUES IN SOURCES
PRINT_MESSAGE:	

	MOVLW	0X10		; COPYING THE VALUE OF 16 IN DECIMALS INTO WREG
	MOVWF	LOOP_COUNTER	; COPYING THE VALUE IN WREG INTO LOOP_COUNTER
LOOP2:
	TBLRD*+			; COPIES BYTE VALUE INTO TABLE LATCH AND INCRMENTS THE POINTER TO THE MEMORY ADDRESS
	MOVF	TABLAT,W	; COPY BYTE FROM TABLE LATCH INTO W
	MOVWF	INDF0		; COPY BYTE FROM W INTO PORTB	
	BSF	PORTA,LCD_E	; SETTING THE BIT 2 OF PORTA
	BSF	PORTA,LCD_RS	; SETTING THE BIT 3 OF PORTA
	CALL	DELAY		; CALLING THE SUBROUTINE DELAY
	BCF	PORTA,LCD_E	; CLEAR THE BIT 2 OF PORTA
	CALL	DELAY		; CALLING THE SUBROUTINE DELAY
	DECF	LOOP_COUNTER,F	; DECREMENT COUNT REG AND STORE IT IN THAT REG
	BNZ	LOOP2		; CONTINUE TO COPY UNTIL COUNT_REG = 0
	
	RETURN			; RETURNS TO THE LINE AFTER FROM WHERE THE FUNCTION WAS CALLED.

;CREATING A SUBROUTINE CALLED DELAY
DELAY:	
		MOVLW	D'255'		; COPY THE VALUE OF 255 DECIMAL INTO WREG
		MOVWF	COUNTER1	; COPY THE VALUE FROM WREG INTO COUNTER1

DELAY50MC:	MOVLW 	D'10'		; COPY THE VALUE OF 10 DECIMAL INTO WREG
		MOVWF	COUNTER2	; COPY THE VALUE IN WREG INTO COUNTER2
LOOP:		DECF	COUNTER2,1	; DECREMENT THE VALUE IN COUNTER2 BY 1
		BNZ	LOOP		; IF COUNTER1 IS 0 GO TO NEXT LINE, ELSE GO TO THE LABEL LOOP.
		DECF	COUNTER1,1	; DECREMENT THE VALUE IN COUNTER1 BY 1.
		BNZ	DELAY50MC	; IF COUNTER2 IS 0 GO TO NEXT LINE, ELSE GO TO THE LABEL DELAY50MC.

		RETURN			; RETURNS TO THE LINE AFTER FROM WHERE THE FUNCTION WAS CALLED.

;CREATING A SUBROUTINE CALLED 
NEXT_ROW:

	BCF	PORTA,LCD_RS		; CLEAR THE BIT 3 OF PORTA
	CALL 	DELAY			; CALLING THE SUBROUTINE DELAY
	MOVLW	B'11000000'		; COPYING THE LITERAL VALUE OF '11000000' IN BINARY INTO WREG (THIS IS THE COMMAND TO CLREAR THE LCD).
	MOVWF	PORTB			; COPYING W TO PORTB
	BSF	PORTA,LCD_E		; SETTING THE BIT 2 OF PORTA
	CALL 	DELAY			; CALLING THE SUBROUTINE DELAY
	BCF	PORTA,LCD_E		; CLEAR THE BIT 2 OF PORTA
	BSF	PORTA,LCD_RS		; SETTING THE BIT 3 OF PORTA
	CALL	DELAY			; CALLING THE SUBROUTINE DELAY

	RETURN				; RETURNS TO THE LINE AFTER FROM WHERE THE FUNCTION WAS CALLED.

;CREATING A SUBROUTINE CALLED 
CLEAR_LCD:
	
	BCF	PORTA,LCD_RS		; CLEAR THE BIT 3 OF PORTA
	CALL 	DELAY			; CALLING THE SUBROUTINE DELAY
	MOVLW	D'1'			; COPYING THE LITERAL VALUE OF 1 TO W
	MOVWF	PORTB			; COPYING W TO PORTB
	BSF	PORTA,LCD_E		; SETTING THE BIT 2 OF PORTA
	CALL 	DELAY			; CALLING THE SUBROUTINE DELAY
	BCF	PORTA,LCD_E		; CLEAR THE BIT 2 OF PORTA
	BSF	PORTA,LCD_RS		; SETTING THE BIT 3 OF PORTA
	CALL	DELAY			; CALLING THE SUBROUTINE DELAY

	RETURN				; RETURNS TO THE LINE AFTER FROM WHERE THE FUNCTION WAS CALLED.

;LABEL TO END THE PROGRAM
ENDING:

	ORG	0X120
; DECLARING THE DATA BYTES WITH ALL THE MESSAGES
SOURCE:	DB	LET_I,LET_SPACE,LET_D,LET_O,LET_SPACE,LET_P,LET_R,LET_O,LET_G,LET_R,LET_A,LET_M,LET_M,LET_I,LET_N,LET_G
	DB	LET_F,LET_O,LET_L,LET_L,LET_O,LET_W,LET_SPACE,LET_M,LET_E,LET_SPACE,LET_O,LET_N,LET_SPACE,LET_I,LET_G,LET_COLON
	DB	LET_@,LET_J,LET_O,LET_S,LET_E,LET_R,LET_A,LET_M,LET_O,LET_S,LET_.,LET_D,LET_E,LET_V,LET_SPACE,LET_SPACE
	
	SLEEP 				; GOING INTO STAND BY MODE.
	END				; SHUTTING DOWN PIC18.